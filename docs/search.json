[{"path":"/articles/MalReBay.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"MalReBay","text":"MalReBay package designed determine whether recurrent malaria infection recrudescence (relapse original infection) reinfection (new infection separate mosquito bite). uses Bayesian MCMC (Markov chain Monte Carlo) framework analyze paired genotyping data patient’s initial infection (Day 0) subsequent day recurrence (Day X). tutorial provides step--step guide main analysis workflow, loading data interpreting final results. first review conceptual framework package walk practical example, loading data interpreting final results.","code":""},{"path":"/articles/MalReBay.html","id":"the-malrebay-conceptual-workflow","dir":"Articles","previous_headings":"","what":"2. The MalReBay Conceptual Workflow","title":"MalReBay","text":"conceptual steps MalReBay takes get raw data final classification. main classify_infections() function automates entire pipeline . workflow consists three main stages:","code":""},{"path":"/articles/MalReBay.html","id":"data-processing","dir":"Articles","previous_headings":"2. The MalReBay Conceptual Workflow","what":"Data Processing","title":"MalReBay","text":"initial stage sequential pipeline designed prepare data analysis. Import Data: process begins import_data(), reads Excel file, automatically detects data type (length-polymorphic vs. amplicon sequencing), performs initial cleaning. Define Alleles: length-polymorphic data, define_alleles() groups raw fragment lengths discrete, well-defined allele bins. Calculate Frequencies: calculate_frequencies3() computes initial population-level frequency allele, provides starting point MCMC model. Recode Alleles: Finally, recode_alleles() converts raw allele measurements integer-based codes corresponding defined bins. output stage clean, structured dataset ready Bayesian engine.","code":""},{"path":"/articles/MalReBay.html","id":"the-bayesian-mcmc-algorithm","dir":"Articles","previous_headings":"2. The MalReBay Conceptual Workflow","what":"The Bayesian MCMC Algorithm","title":"MalReBay","text":"core package. uses Gibbs sampling approach iteratively explore probability space find likely classification patient. Coordination: run_all_sites() function manages analysis geographical site. site, calls MCMC engine (run_one_chain() run_one_chain_ampseq()). Iteration: engine runs many iterations, step, updates estimates : identity unobserved (“hidden”) alleles using switch_hidden_length() switch_hidden_ampseq(). population-level allele frequencies using findposteriorfrequencies(). Convergence: simulation runs parallel across multiple chains automatically checks convergence, ensuring results stable reliable.","code":""},{"path":"/articles/MalReBay.html","id":"summarization-and-output","dir":"Articles","previous_headings":"2. The MalReBay Conceptual Workflow","what":"Summarization and Output","title":"MalReBay","text":"MCMC converged, package summarizes vast amount data generated simulation user-friendly outputs. Posterior Probabilities: primary output table posterior probabilities recrudescence patient. Diagnostic Reports: generate_likelihood_diagnostics() function creates plots (traceplots, Gelman-Rubin plots) verify model convergence. Allele Frequency Plots: generate_allele_frequency_plot() utility can used visualize raw allele distributions. Marker-Level Analysis: detailed table generated showing contribution genetic marker final classification. walk practical example using MalReBay package classify recurrent malaria infections. example demonstrate set analysis, run MCMC simulation, interpret results.","code":""},{"path":"/articles/MalReBay.html","id":"setup","dir":"Articles","previous_headings":"","what":"1. Setup","title":"MalReBay","text":"First, need load MalReBay package, along couple useful packages data handling plotting.","code":"library(MalReBay) library(future) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(ggplot2)"},{"path":"/articles/MalReBay.html","id":"the-input-data","dir":"Articles","previous_headings":"","what":"2. The Input Data","title":"MalReBay","text":"main input MalReBay Excel file genotyping data. include patient ID, sampling day, Day 0, Day recurrence, site/region, allele calls marker. site information missing, add analysis. first three columns recommended, code also accepts data patient ID sampling day combined one column. Including Day 0 samples patients without recurrence optional helpful, improves estimation allele frequencies increases classification accuracy. package includes example dataset Angola use tutorial. classify_infections() function expects data ‘wide’ format, : * Sample.ID column uniquely identifies sample includes “Day 0” “Day Failure”. * Site column indicating geographical origin. * Allele calls marker columns named like LocusName_AlleleNumber (e.g., TA40_1, TA40_2, etc.). Let’s get file path example data included package.","code":"# This command finds the example file within the installed MalReBay package input_file <- system.file(\"extdata\", \"Angola_2021_TES_7NMS.xlsx\",                           package = \"MalReBay\")  print(input_file) #> [1] \"C:/Users/golumo/AppData/Local/R/win-library/4.5/MalReBay/extdata/Angola_2021_TES_7NMS.xlsx\""},{"path":"/articles/MalReBay.html","id":"running-the-analysis","dir":"Articles","previous_headings":"","what":"3. Running the Analysis","title":"MalReBay","text":"entire workflow managed main function classify_infections(). function requires three main arguments: input_filepath: path Excel data. mcmc_config: list settings MCMC simulation. output_folder: directory results diagnostic plots saved.","code":""},{"path":"/articles/MalReBay.html","id":"step-3-1-define-mcmc-configuration","dir":"Articles","previous_headings":"3. Running the Analysis","what":"Step 3.1: Define MCMC Configuration","title":"MalReBay","text":"example, use minimal configuration quick run. real analysis, consider using much larger values chunk_size max_iterations increase reduce number chains ensure model converges properly. Please note running multiple chains (typically 3–4) recommended allows check whether chains converge posterior distribution.","code":"# NOTE: These settings are for a quick demonstration only. quick_mcmc_config <- list(   n_chains = 2,          # Run two parallel chains   chunk_size = 1000,       # Check convergence every 1000 iterations   max_iterations = 1000,   # Stop after a maximum of 1000 total iterations   rhat_threshold = 1.1,  # A relaxed convergence threshold for the example   ess_threshold = 50     # A relaxed effective sample size for the example )"},{"path":"/articles/MalReBay.html","id":"step-3-2-define-an-output-folder","dir":"Articles","previous_headings":"3. Running the Analysis","what":"Step 3.2: Define an Output Folder","title":"MalReBay","text":"’s good practice save results dedicated folder. tutorial, ’ll create temporary directory.","code":"output_dir <- file.path(tempdir(), \"MalReBay_tutorial_results\") if (!dir.exists(output_dir)) {   dir.create(output_dir) }  print(output_dir) #> [1] \"C:\\\\Users\\\\golumo\\\\AppData\\\\Local\\\\Temp\\\\Rtmpo7gvyS/MalReBay_tutorial_results\""},{"path":"/articles/MalReBay.html","id":"step-3-3-execute-the-main-function","dir":"Articles","previous_headings":"3. Running the Analysis","what":"Step 3.3: Execute the Main Function","title":"MalReBay","text":"Now can run analysis. classify_infections() print progress messages console, informing data type detected, sites analyzing, status MCMC convergence. ‘future’ package used background parallel processing, can expect analysis run faster multi-core machines.","code":"plan(multisession, workers = 2)  classification_summary <- classify_infections(   input_filepath = input_file,   mcmc_config = quick_mcmc_config,   output_folder = output_dir ) #> INFO: Detected 'length_polymorphic' data format. #> INFO: Following length-polymorphic data processing pipeline. #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in classify_infections(input_filepath = input_file, mcmc_config = #> quick_mcmc_config, : The following requested markers were NOT found and will be #> ignored: PolyA, TA42, TA81, TA87, TA40, ARAII, PFG377, TA60, K1, 3D7, MAD20, #> RO33, R033, FC27, IC, glurp #> Proceeding with analysis for these markers: 313, 383, TA1, POLYA, PFPK2, 2490, TA109 #> The model is running MCMC analysis... #> Number of patient pairs (nids) found: 19 #> INFO: Preparing LENGTH-POLYMORPHIC MCMC engine for site: Benguela #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 4 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>  #> Generating convergence diagnostics for site: Benguela  #> Gelman-Rubin R-hat for Log-Likelihood: #> Potential scale reduction factors: #>  #>               Point est. Upper C.I. #> loglikelihood       1.08       1.28 #>  #>  #> Effective Sample Size (ESS): #> loglikelihood  #>      163.9257 #> Number of patient pairs (nids) found: 13 #> INFO: Preparing LENGTH-POLYMORPHIC MCMC engine for site: Lunda Sul #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 4 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>  #> Generating convergence diagnostics for site: Lunda Sul  #> Gelman-Rubin R-hat for Log-Likelihood: #> Potential scale reduction factors: #>  #>               Point est. Upper C.I. #> loglikelihood       1.31       2.05 #>  #>  #> Effective Sample Size (ESS): #> loglikelihood  #>      33.81928 #> Number of patient pairs (nids) found: 38 #> INFO: Preparing LENGTH-POLYMORPHIC MCMC engine for site: Zaire #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 4 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 3 columns for this locus. #>     -> Binning method is: microsatellite #>     -> Found 5 columns for this locus. #>  #> Generating convergence diagnostics for site: Zaire  #> Gelman-Rubin R-hat for Log-Likelihood: #> Potential scale reduction factors: #>  #>               Point est. Upper C.I. #> loglikelihood       1.09       1.36 #>  #>  #> Effective Sample Size (ESS): #> loglikelihood  #>      114.7537 #>  #> --- Debug: Structure of MCMC results --- #> List of 6 #>  $ classifications:List of 3 #>   ..$ Benguela : num [1:19, 1:150] 0 0 1 1 0 0 0 0 0 0 ... #>   ..$ Lunda Sul: num [1:13, 1:150] 0 1 0 0 0 0 1 1 0 0 ... #>   ..$ Zaire    : num [1:38, 1:150] 1 0 0 0 0 0 0 1 0 0 ... #>  $ ids            :List of 3 #>   ..$ Benguela : chr [1:19] \"BD21-002\" \"BD21-040\" \"BD21-041\" \"BD21-053\" ... #>   ..$ Lunda Sul: chr [1:13] \"LL21-008\" \"LL21-010\" \"LL21-027\" \"LL21-037\" ... #>   ..$ Zaire    : chr [1:38] \"ZL21-203\" \"ZL21-204\" \"ZL21-209\" \"ZL21-218\" ... #>  $ locus_summary  :List of 3 #>   ..$ Benguela :'data.frame':    19 obs. of  4 variables: #>   .. ..$ patient_id       : chr [1:19] \"BD21-002\" \"BD21-040\" \"BD21-041\" \"BD21-053\" ... #>   .. ..$ n_available_d0   : num [1:19] 7 7 7 7 7 7 7 7 7 7 ... #>   .. ..$ n_available_df   : num [1:19] 7 7 7 5 7 7 7 7 5 7 ... #>   .. ..$ n_comparable_loci: num [1:19] 7 7 7 5 7 7 7 7 5 7 ... #>   ..$ Lunda Sul:'data.frame':    13 obs. of  4 variables: #>   .. ..$ patient_id       : chr [1:13] \"LL21-008\" \"LL21-010\" \"LL21-027\" \"LL21-037\" ... #>   .. ..$ n_available_d0   : num [1:13] 7 7 7 7 7 7 7 7 7 7 ... #>   .. ..$ n_available_df   : num [1:13] 7 7 2 7 4 6 7 6 5 4 ... #>   .. ..$ n_comparable_loci: num [1:13] 7 7 2 7 4 6 7 6 5 4 ... #>   ..$ Zaire    :'data.frame':    38 obs. of  4 variables: #>   .. ..$ patient_id       : chr [1:38] \"ZL21-203\" \"ZL21-204\" \"ZL21-209\" \"ZL21-218\" ... #>   .. ..$ n_available_d0   : num [1:38] 7 7 7 7 7 7 7 7 7 7 ... #>   .. ..$ n_available_df   : num [1:38] 7 7 7 4 7 7 7 7 7 7 ... #>   .. ..$ n_comparable_loci: num [1:38] 7 7 7 4 7 7 7 7 7 7 ... #>  $ locus_lrs      :List of 3 #>   ..$ Benguela : num [1:19, 1:7, 1:150] 3.54e-01 5.16e-08 1.55e+01 1.11 6.67e-17 ... #>   .. ..- attr(*, \"dimnames\")=List of 3 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   ..$ Lunda Sul: num [1:13, 1:7, 1:150] 0.00107 7.60857 1 0.02486 2.63464 ... #>   .. ..- attr(*, \"dimnames\")=List of 3 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   ..$ Zaire    : num [1:38, 1:7, 1:150] 2.43 9.43e-11 6.36e-20 1.00 4.37e-04 ... #>   .. ..- attr(*, \"dimnames\")=List of 3 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>  $ locus_dists    :List of 3 #>   ..$ Benguela : num [1:19, 1:7, 1:150] 2 8 0 0 16 2 0 6 10 6 ... #>   .. ..- attr(*, \"dimnames\")=List of 3 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   ..$ Lunda Sul: num [1:13, 1:7, 1:150] 4 0 18 2 0 0 0 0 8 20 ... #>   .. ..- attr(*, \"dimnames\")=List of 3 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   ..$ Zaire    : num [1:38, 1:7, 1:150] 0 10 18 18 4 2 10 0 10 0 ... #>   .. ..- attr(*, \"dimnames\")=List of 3 #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>   .. .. ..$ : NULL #>  $ locinames      :List of 3 #>   ..$ Benguela : chr [1:7] \"313\" \"383\" \"TA1\" \"POLYA\" ... #>   ..$ Lunda Sul: chr [1:7] \"313\" \"383\" \"TA1\" \"POLYA\" ... #>   ..$ Zaire    : chr [1:7] \"313\" \"383\" \"TA1\" \"POLYA\" ... #> NULL #> ---------------------------------------- #>  #>  #> --- Debug: Names in results$ids --- #> [1] \"Benguela\"  \"Lunda Sul\" \"Zaire\"     #> --- Debug: Names in results$classifications --- #> [1] \"Benguela\"  \"Lunda Sul\" \"Zaire\"     #> ---------------------------------- #>  #> --- Processing site: 'Benguela' --- #> Is site_ids NULL?  FALSE  #> Length of site_ids:  19  #> Is site_probs_matrix NULL?  FALSE  #> Dimensions of site_probs_matrix:  19x150  #> Check passed. Calculating probabilities... #>  #> --- Processing site: 'Lunda Sul' --- #> Is site_ids NULL?  FALSE  #> Length of site_ids:  13  #> Is site_probs_matrix NULL?  FALSE  #> Dimensions of site_probs_matrix:  13x150  #> Check passed. Calculating probabilities... #>  #> --- Processing site: 'Zaire' --- #> Is site_ids NULL?  FALSE  #> Length of site_ids:  38  #> Is site_probs_matrix NULL?  FALSE  #> Dimensions of site_probs_matrix:  38x150  #> Check passed. Calculating probabilities... #> Summary table saved to: C:\\Users\\golumo\\AppData\\Local\\Temp\\RtmpAzfzSn/MalReBay_tutorial_results/probability_of_recrudescence_summary.csv #> Detailed marker-level summary saved to: C:\\Users\\golumo\\AppData\\Local\\Temp\\RtmpAzfzSn/MalReBay_tutorial_results/marker_level_summary.csv  plan(sequential)"},{"path":"/articles/MalReBay.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"","what":"4. Interpreting the Output","title":"MalReBay","text":"classify_infections() function returns list containing two key data frames: summary marker_details.","code":""},{"path":"/articles/MalReBay.html","id":"the-main-summary-table","dir":"Articles","previous_headings":"4. Interpreting the Output","what":"4.1 The Main Summary Table","title":"MalReBay","text":"$summary data frame provides main result patient. Let’s look first rows. Top rows classification summary. columns : * Site: geographical site sample. * Sample.ID: unique patient identifier. * Probability: posterior probability infection recrudescence. value near 1.0 suggests recrudescence, value near 0.0 suggests reinfection. * N_Available_D0 / N_Available_DF: number loci genetic data Day 0 Day Failure, respectively. * N_Comparable_Loci: number loci data time points, amount data used classification.","code":"summary_df <- classification_summary$summary  knitr::kable(head(summary_df), caption = \"Top rows of the classification summary.\")"},{"path":"/articles/MalReBay.html","id":"detailed-marker-level-results","dir":"Articles","previous_headings":"4. Interpreting the Output","what":"4.2 Detailed Marker-Level Results","title":"MalReBay","text":"$marker_details data frame provides locus-specific insights, can useful diagnosing markers driving classification towards reinfection recrudescence. Top rows marker-level summary. table shows average likelihood ratio genetic distance marker patient, can help identify potential genotyping errors unusual genetic patterns.","code":"marker_details_df <- classification_summary$marker_details  knitr::kable(head(marker_details_df), caption = \"Top rows of the marker-level summary.\")"},{"path":"/articles/MalReBay.html","id":"visualizing-the-results","dir":"Articles","previous_headings":"","what":"5. Visualizing the Results","title":"MalReBay","text":"histogram posterior probabilities excellent way visualize overall results. clear separation two groups (one near 0 one near 1) indicates high confidence classifications.  histogram shows distribution posterior probabilities. example run, see clear group patients low probability (likely reinfections) another group high probability (likely recrudescences).","code":"ggplot(summary_df, aes(x = Probability)) +   geom_histogram(binwidth = 0.05, fill = \"steelblue\", color = \"white\", boundary = 0) +   labs(     title = \"Distribution of Posterior Probabilities of Recrudescence\",     x = \"Posterior Probability\",     y = \"Number of Patients\"   ) +   theme_bw()"},{"path":"/articles/MalReBay.html","id":"marker-descriptive-analysis","dir":"Articles","previous_headings":"","what":"6. Marker descriptive analysis","title":"MalReBay","text":"visualizing allele frequency distributions helps us understand genetic diversity markers can reveal potential issues interesting patterns data. following code chunk run detected data type length_polymorphic, frequency plots informative numeric allele lengths. uses internal helper function generate_allele_frequency_plot create two sets plots, Site-Specific Plots Overall Plot. resulting PDF files saved output_dir defined earlier. plots help answer following questions data quality genetic diversity: “marker X highly diverse (many bars) mostly monomorphic (one two bars)?” “differences allele distributions Day 0 Day Failure?” “genetic diversity Site differ significantly Site B?”","code":"imported_data <- MalReBay:::import_data(filepath = input_file) #> INFO: Detected 'length_polymorphic' data format. #> INFO: Following length-polymorphic data processing pipeline. #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion  if (imported_data$data_type == \"length_polymorphic\") {      # OVERALL plot   overall_plot_data <- rbind(imported_data$late_failures, imported_data$additional)   MalReBay:::generate_allele_frequency_plot(     raw_data_df   = overall_plot_data,     site_name     = NULL,      output_folder = output_dir   )      # Site-specific plots   site_names <- unique(imported_data$late_failures$Site)   for (site in site_names) {     site_data <- imported_data$late_failures[imported_data$late_failures$Site == site, ]     additional_site_data <- imported_data$additional[imported_data$additional$Site == site, ]          MalReBay:::generate_allele_frequency_plot(       raw_data_df = rbind(site_data, additional_site_data),       site_name = site,       output_folder = output_dir     )   } } #> Plot saved to: C:\\Users\\golumo\\AppData\\Local\\Temp\\Rtmpo7gvyS/MalReBay_tutorial_results/allele_freq_plot_Overall.pdf #> Plot saved to: C:\\Users\\golumo\\AppData\\Local\\Temp\\Rtmpo7gvyS/MalReBay_tutorial_results/allele_freq_plot_Benguela.pdf #> Plot saved to: C:\\Users\\golumo\\AppData\\Local\\Temp\\Rtmpo7gvyS/MalReBay_tutorial_results/allele_freq_plot_Lunda_Sul.pdf #> Plot saved to: C:\\Users\\golumo\\AppData\\Local\\Temp\\Rtmpo7gvyS/MalReBay_tutorial_results/allele_freq_plot_Zaire.pdf"},{"path":"/articles/MalReBay.html","id":"files-saved-to-output-folder","dir":"Articles","previous_headings":"","what":"Files Saved to Output Folder","title":"MalReBay","text":"Remember classify_infections() also saved important files output_folder defined. include: probability_of_recrudescence_summary.csv: main summary table. marker_level_summary.csv: detailed marker-level table. subfolder named convergence_diagnosis/ containing diagnostic plots (traceplots, Gelman-Rubin plots, etc.) site, crucial verifying MCMC model converged correctly.","code":""},{"path":"/articles/MalReBay.html","id":"alternative-analysis-comparing-mcmc-with-match-counting","dir":"Articles","previous_headings":"","what":"7. Alternative Analysis: Comparing MCMC with Match-Counting","title":"MalReBay","text":"Bayesian MCMC framework provides robust probabilistic classification, can insightful compare results traditional, deterministic match-counting algorithm current method recommended TES. MalReBay package includes utility function perform_match_counting() can used generate comparison table MCMC results match-counting results. flow match-counting analysis: 1. Runs perform_match_counting() algorithm imported data. 2. Prepares MCMC summary table merging selecting key columns. 3. Creates common patient ID join different datasets. 4. Performs series joins create one wide table containing original allele data, detailed match-counting results, final MCMC probability. 5. Reorders columns clarity saves final table CSV file. First 12 columns final comparison table. final table contains following columns: * raw allele data marker. * summary match-counting algorithm (Number_Matches, Number_Loci_Compared). * detailed per-locus result match-counting (R match, NI non-match, IND indeterminate). * final posterior probability recrudescence Bayesian MCMC analysis (Prob_Recrudescence).","code":"imported_data <- MalReBay:::import_data(filepath = input_file) #> INFO: Detected 'length_polymorphic' data format. #> INFO: Following length-polymorphic data processing pipeline. #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion #> Warning in FUN(X[[i]], ...): NAs introduced by coercion  match_results_df <- MalReBay:::perform_match_counting(   genotypedata_latefailures = imported_data$late_failures,    marker_info = imported_data$marker_info)  mcmc_summary_for_merge <- summary_df[, c(\"Sample.ID\", \"Probability\", \"N_Comparable_Loci\")] colnames(mcmc_summary_for_merge) <- c(\"Sample.ID\", \"Prob_Recrudescence\", \"N_Comparable_Loci_MCMC\")  alleles_with_patient_id <- dplyr::mutate(imported_data$late_failures,                                           Patient.ID = gsub(\" (Day 0|Day Failure)$\", \"\", Sample.ID))  final_table <- dplyr::left_join(alleles_with_patient_id, match_results_df, by = c(\"Patient.ID\" = \"Sample.ID\")) final_table <- dplyr::left_join(final_table, mcmc_summary_for_merge, by = c(\"Sample.ID\" = \"Sample.ID\"))  final_table_sorted <- dplyr::arrange(final_table, Patient.ID, Sample.ID) id_cols <- c(\"Sample.ID\", \"Site\") original_allele_cols <- grep(\"(_allele_\\\\d+|_\\\\d+)$\", colnames(final_table_sorted), value = TRUE) analysis_cols <- c(\"Number_Matches\", \"Number_Loci_Compared\",                     setdiff(colnames(match_results_df), c(\"Sample.ID\", \"Number_Matches\", \"Number_Loci_Compared\")),                    \"Prob_Recrudescence\", \"N_Comparable_Loci_MCMC\")  final_cols_order <- intersect(c(id_cols, original_allele_cols, analysis_cols), colnames(final_table_sorted))  final_comparison_table <- dplyr::select(final_table_sorted, dplyr::all_of(final_cols_order))  output_path <- file.path(output_dir, \"algorithm_classification_comparison_table.csv\") write.csv(final_comparison_table, output_path, row.names = FALSE, na = \"\")  knitr::kable(   head(final_comparison_table[, 1:12]),    caption = \"First 12 columns of the final comparison table.\" )"},{"path":"/articles/MalReBay.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"MalReBay","text":"tutorial shown main workflow MalReBay package. using classify_infections() function, can efficiently analyze genotyping data obtain robust, probability-based classifications recurrent malaria infections. details function’s arguments underlying model, please consult help file running ?classify_infections.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Veronica Adhiambo Ochieng. Maintainer, author. Mateusz Plucinski. Author. Monica Golumbeanu. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adhiambo Veronica (2025). MalReBay: R package .... R package version 0.0.0.9000, https://github.com/Veronica-adhiambo-ochieng/BayesMalariaTES.","code":"@Manual{,   title = {MalReBay: {An} {R} package to ...},   author = {{Adhiambo Veronica}},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/Veronica-adhiambo-ochieng/BayesMalariaTES}, }"},{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement veronica.adhiambo@aims.ac.rw. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to BayesMalariaTES","title":"Contributing to BayesMalariaTES","text":"First , thanks taking time contribute BayesMalariaTES! types contributions encouraged valued. See Table contents different ways help details project handles . Please make sure read relevant section making contribution. make lot easier us maintainers smooth experience involved.","code":""},{"path":"/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contributing to BayesMalariaTES","text":"Code conduct Style guide Commit messages Asking questions Reporting bugs Requesting features Contributing code","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of conduct","title":"Contributing to BayesMalariaTES","text":"project released Contributor Code Conduct. participating, expected uphold code. Please report unacceptable behavior veronica.adhiambo@aims.ac.rw.","code":""},{"path":"/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contributing to BayesMalariaTES","text":"use Tidyverse style guide writing R code. Functions documented roxygen2 syntax. BayesMalariaTES uses lower_snake_case.","code":""},{"path":"/CONTRIBUTING.html","id":"commit-messages","dir":"","previous_headings":"","what":"Commit messages","title":"Contributing to BayesMalariaTES","text":"want contribute commiting changes, please try use Conventional commits specification.","code":""},{"path":"/CONTRIBUTING.html","id":"asking-questions","dir":"","previous_headings":"","what":"Asking questions","title":"Contributing to BayesMalariaTES","text":"ask question, best search existing Issues might help . case found suitable issue still need clarification, can write question issue. still feel need ask question need clarification, recommend following: Open new Issue. Use template other_issue.md. Provide much context can ’re running . Provide project platform versions (paste output sessionInfo()). take care issue soon possible.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"before-submitting-a-bug-report","dir":"","previous_headings":"Reporting bugs","what":"Before submitting a bug report","title":"Contributing to BayesMalariaTES","text":"good bug report shouldn’t leave others needing chase information. Therefore, ask investigate carefully, collect information describe issue detail report. Please complete following steps advance help us fix potential bug fast possible. Make sure using latest version BayesMalariaTES. Determine bug really bug error side. see users experienced (potentially already solved) issue , check already bug report existing bug error bug tracker.","code":""},{"path":"/CONTRIBUTING.html","id":"how-do-i-submit-a-bug-report","dir":"","previous_headings":"Reporting bugs","what":"How do I submit a bug report?","title":"Contributing to BayesMalariaTES","text":"use GitHub Issues track bugs errors. run issue project: Open new Issue. Use template bug_report.md. Explain behavior expect actual behavior. Please provide much context possible describe reproduction steps someone else can follow recreate issue . usually includes code reproducible example. take care issue soon possible.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"before-requesting-a-feature","dir":"","previous_headings":"Requesting features","what":"Before requesting a feature","title":"Contributing to BayesMalariaTES","text":"Make sure using latest version BayesMalariaTES. Read documentation carefully find functionality already covered. Perform search see enhancement already suggested. , add comment existing issue instead opening new one.","code":""},{"path":"/CONTRIBUTING.html","id":"how-do-i-submit-a-feature-request","dir":"","previous_headings":"Requesting features","what":"How do I submit a feature request?","title":"Contributing to BayesMalariaTES","text":"Feature requests tracked GitHub Issues. Open new Issue. Use template feature_request.md. Provide clear descriptive title issue identify suggestion. Provide step--step description suggested enhancement many details possible. Explain enhancement useful BayesMalariaTES users. take care issue soon possible.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"general-workflow","dir":"","previous_headings":"Contributing code","what":"General workflow","title":"Contributing to BayesMalariaTES","text":"use GitHub flow collaborate project: Fork repository using GitHub interface. Clone fork using git clone fork-url (replace fork-url URL fork). Alternatively, open RStudio IDE create New Project Version Control. Create new branch w/ git checkout -b branch-name (replace branch-name name new branch). Make contribution (see examples). Stage (git add) commit (git commit) changes often necessary Push changes GitHub w/ git push origin branch-name. Submit Pull Request original repo. review PR soon possible.","code":""},{"path":[]},{"path":"/CONTRIBUTING.html","id":"editing-the-readme","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing the README","title":"Contributing to BayesMalariaTES","text":"want contribute improving README, please edit README.Rmd (README.md). forget update README.md running:","code":"rmarkdown::render(\"README.Rmd\")"},{"path":"/CONTRIBUTING.html","id":"editing-vignettes","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing vignettes","title":"Contributing to BayesMalariaTES","text":"want contribute editing existing vignette, just edit corresponding Rmd file stored vignettes/ folder. want contribute adding new vignette, create new Rmd file vignettes/ folder add following header: use new external dependency, forget add DESCRIPTION file section Suggests (package already listed section Imports). Check integrity package :","code":"--- title: \"Vignette Title\" output: rmarkdown::html_vignette vignette: >   %\\VignetteIndexEntry{Vignette Title}   %\\VignetteEngine{knitr::rmarkdown}   %\\VignetteEncoding{UTF-8} --- devtools::check()"},{"path":"/CONTRIBUTING.html","id":"editing-function-documentation","dir":"","previous_headings":"Contributing code > Improve documentation","what":"Editing function documentation","title":"Contributing to BayesMalariaTES","text":"want contribute improving documentation function, open corresponding file R/ folder edit lines starting #' (roxygen2 syntax). Update documentation (Rd files man/ folder) running: use new external dependency example section, forget add DESCRIPTION file section Imports (package already listed). Check integrity package :","code":"devtools::document() devtools::check()"},{"path":"/CONTRIBUTING.html","id":"fix-bug","dir":"","previous_headings":"Contributing code","what":"Fix bug","title":"Contributing to BayesMalariaTES","text":"want contribute improving code function, open edit corresponding file R/ folder. Check integrity package : forget adapt unit tests function editing corresponding file stored tests/testthat/ folder. use package testthat implement unit tests. Check tests running:","code":"devtools::check() devtools::test()"},{"path":"/CONTRIBUTING.html","id":"new-feature","dir":"","previous_headings":"Contributing code","what":"New feature","title":"Contributing to BayesMalariaTES","text":"want contribute submitting new feature, please follow workflow: Create new R file folder R/. Implement code function. Document function w/ roxygen2 syntax. necessary, add additional dependencies DESCRIPTION file. Update package documentation w/ devtools::document(). Create new R file folder tests/testthat/. Implement unit tests new function. Check integrity package w/ devtools::check(). Thanks contribution!","code":""},{"path":"/index.html","id":"malrebay","dir":"","previous_headings":"","what":"Bayesian classification for malaria recurrences","title":"Bayesian classification for malaria recurrences","text":"MalReBay R package designed analyze genotyping data Therapeutic Efficacy Studies (TES) classify recurrent malaria parasite infections. determines posterior probability given infection recrudescence (treatment failure) versus new infection. Unlike simple allele-matching methods, MalReBay implements Bayesian algorithm, solved using Markov Chain Monte Carlo (MCMC) engine, provide robust probabilistic classification sample. supports analysis traditional length-polymorphic markers (microsatellites, msp1, msp2, glurp) modern amplicon sequencing data. length-polymorphic data (microsatellites, msp), employs distance-based likelihood model accounts PCR stutter scoring errors. amplicon sequencing data, uses exact-match categorical model, suitable discrete haplotypes. framework robustly handles polyclonal infections imputes missing genotypes part MCMC sampling, providing powerful tool modern TES data analysis.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Bayesian classification for malaria recurrences","text":"can install development version MalReBay GitHub :","code":"remotes::install_github(\"SwissTPH/MalReBay\")"},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/reference/classify_infections.html","id":null,"dir":"Reference","previous_headings":"","what":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","title":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","text":"main user-facing function MalReBay package. runs complete Bayesian analysis workflow classify parasite infections either recrudescence reinfection based genotyping data. function handles data import, MCMC simulation automatic convergence checking, summarization saving final results.","code":""},{"path":"/reference/classify_infections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","text":"","code":"classify_infections(input_filepath, mcmc_config, output_folder)"},{"path":"/reference/classify_infections.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","text":"input_filepath character string. full path input Excel file containing cleaned genotyping data. mcmc_config list MCMC configuration parameters. See Details full list options defaults. output_folder character string specifying path folder results (summary CSVs, diagnostic plots) saved. folder created exist.","code":""},{"path":"/reference/classify_infections.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","text":"list containing two data frames: summary data frame summarizing main results patient, including posterior probability recrudescence summary genetic data available comparison. marker_details detailed data frame providing mean likelihood ratio mean allele distance genetic marker patient, offering locus-specific insights classification. Two CSV files corresponding data frames also saved output_folder.","code":""},{"path":"/reference/classify_infections.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","text":"function operates first importing validating data provided Excel file. automatically detects data type (length-polymorphic amplicon sequencing) selects appropriate MCMC engine. MCMC simulation run parallel across multiple chains proceeds chunks, stopping automatically convergence criteria met maximum number iterations reached. mcmc_config list provides fine-grained control simulation. Key parameters include: n_chains: Number parallel chains run. (Default: 4). chunk_size: Number iterations per chunk. chunk, convergence assessed. (Default: 10000). max_iterations: maximum total number iterations simulation forcibly stopped, even converged. (Default: 100000). burn_in_frac: fraction initial samples discard chain summarizing results. (Default: 0.25). rhat_threshold: Gelman-Rubin diagnostic threshold convergence. (Default: 1.01). ess_threshold: Effective Sample Size threshold convergence. (Default: 400). record_hidden_alleles: logical flag. TRUE, full state imputed hidden alleles saved. can generate large output files mainly debugging. (Default: FALSE). parameters specified list use default values.","code":""},{"path":"/reference/classify_infections.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classify Infections Using a Bayesian MCMC Framework — classify_infections","text":"","code":"# Get the path to the example data file included with the package example_file <- system.file(\"extdata\", \"Angola_2021_TES_7NMS.xlsx\",                             package = \"MalReBay\")  # Create a temporary directory to save the results for this example temp_output_dir <- file.path(tempdir(), \"MalReBay_example\") dir.create(temp_output_dir)  # Define a minimal MCMC configuration for a quick and illustrative run # NOTE: These settings are for demonstration only and are not sufficient # for a real analysis. quick_mcmc_config <- list(   n_chains = 2,   chunk_size = 500,   max_iterations = 500, # Set max_iterations equal to chunk_size for one run   rhat_threshold = 1.1, # Relaxed for the example   ess_threshold = 50   # Relaxed for the example )  if (FALSE) { # \\dontrun{ # Run the full analysis results_list <- classify_infections(   input_filepath = example_file,   mcmc_config = quick_mcmc_config,   output_folder = temp_output_dir )  # View the top rows of the main summary table print(head(results_list$summary))  # View the top rows of the detailed marker-level table print(head(results_list$marker_details)) } # }"},{"path":"/reference/generate_allele_frequency_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate and save an allele frequency distribution plot — generate_allele_frequency_plot","title":"Generate and save an allele frequency distribution plot — generate_allele_frequency_plot","text":"function creates faceted bar plot showing frequency allele length Day 0 vs. Day Failure samples. can generate plots single site overall plot sites combined.","code":""},{"path":"/reference/generate_allele_frequency_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate and save an allele frequency distribution plot — generate_allele_frequency_plot","text":"","code":"generate_allele_frequency_plot(   raw_data_df,   site_name = NULL,   output_folder,   plots_per_row = 4,   plot_width = 12,   plot_height = 10 )"},{"path":"/reference/generate_allele_frequency_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate and save an allele frequency distribution plot — generate_allele_frequency_plot","text":"raw_data_df data frame containing raw genotyping data. site-specific plot, filtered one site. overall plot, contain data sites. site_name name site plot title filename. NULL (default), \"Overall\" plot generated. output_folder directory plot PDF saved. plots_per_row number marker plots display per row. plot_width width output PDF file. plot_height height output PDF file.","code":""},{"path":"/reference/MalReBay-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MalReBay: Bayesian classification for malaria recurrences — MalReBay-package","title":"MalReBay: Bayesian classification for malaria recurrences — MalReBay-package","text":"Classification malaria infection recurrence using Bayesian algorithm.","code":""},{"path":[]},{"path":"/reference/MalReBay-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MalReBay: Bayesian classification for malaria recurrences — MalReBay-package","text":"Maintainer: Veronica Adhiambo Ochieng veronica.adhiambo@aims.ac.rw Authors: Mateusz Plucinski Monica Golumbeanu","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""}]
